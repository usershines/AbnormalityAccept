<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.abnormality.abnormalityaccept.mapper.EquipmentMapper">
    <resultMap id="Base_Equipment_List" type="com.abnormality.abnormalityaccept.entity.Equipment">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="state" column="state"/>
        <result property="applicationRequirement" column="application_requirement"/>
        <result property="masterId" column="master_id"/>
        <result property="description" column="description"/>
    </resultMap>

    <sql id="Base_Equipment">
        id, name, state, application_requirement, master_id, description
    </sql>

    <select id="findAllEquipment" resultMap="Base_Equipment_List">
        SELECT
        <include refid="Base_Equipment"/>
        FROM equipment
    </select>

    <select id="findEquipmentById" resultMap="Base_Equipment_List">
        SELECT
        <include refid="Base_Equipment"/>
        FROM equipment
        WHERE id = #{id}
    </select>

    <insert id="addEquipment">
        INSERT INTO equipment(name, state, application_requirement, master_id, description)
        VALUES(#{name}, #{state}, #{applicationRequirement}, #{masterId}, #{description})
    </insert>

    <update id="updateEquipment">
        UPDATE equipment
        SET name = #{name},
            state = #{state},
            application_requirement = #{applicationRequirement},
            master_id = #{masterId},
            description = #{description}
        WHERE id = #{id}
    </update>

    <delete id="deleteEquipmentById">
        DELETE FROM equipment
        WHERE id = #{id}
    </delete>

    <!-- ============== 拓展方法实现 ============== -->

    <!-- 条件查询装备（动态SQL） -->
    <select id="findEquipmentByCondition" resultType="com.abnormality.abnormalityaccept.entity.Equipment">
        SELECT * FROM equipment
        <where>
            <if test="name != null and name != ''">
                AND name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="type != null and type != ''">
                AND type = #{type}
            </if>
            <if test="state != null and state != ''">
                AND state = #{state}
            </if>
            <if test="masterId != null and masterId != ''">
                AND master_id = #{masterId}
            </if>
        </where>
        ORDER BY update_time DESC
    </select>

    <!-- 分页查询装备 -->
    <select id="findEquipmentByPage" resultType="com.abnormality.abnormalityaccept.entity.Equipment">
        SELECT * FROM equipment
            LIMIT #{offset}, #{pageSize}
    </select>

    <!-- 根据状态查询装备 -->
    <select id="findEquipmentByState" resultType="com.abnormality.abnormalityaccept.entity.Equipment">
        SELECT * FROM equipment WHERE state = #{state}

    </select>

    <!-- 根据负责人查询装备 -->
    <select id="findEquipmentByMasterId" resultType="com.abnormality.abnormalityaccept.entity.Equipment">
        SELECT * FROM equipment WHERE master_id = #{masterId}

    </select>

    <!-- 统计装备数量 -->
    <select id="countEquipment" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM equipment
    </select>

    <!-- 批量更新装备状态 -->
    <update id="batchUpdateEquipmentState">
        UPDATE equipment
        SET state = #{state},
        update_time = NOW()
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!-- 批量删除装备 -->
    <delete id="batchDeleteEquipment">
        DELETE FROM equipment
        WHERE id IN
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!-- 根据名称模糊查询装备 -->
    <select id="findEquipmentByName" resultType="com.abnormality.abnormalityaccept.entity.Equipment">
        SELECT * FROM equipment
        WHERE name LIKE CONCAT('%', #{name}, '%')

    </select>
<!--    <select id="countByCondition" parameterType="Equipment" resultType="int">-->
<!--        SELECT COUNT(*) FROM equipment-->
<!--        <where>-->
<!--            <if test="type != null and type != ''">-->
<!--                AND type = #{type}-->
<!--            </if>-->
<!--            <if test="state != null and state != ''">-->
<!--                AND state = #{state}-->
<!--            </if>-->
<!--        </where>-->
<!--    </select>-->
</mapper>