<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.abnormality.abnormalityaccept.mapper.TeamMapper">
    <!-- 基础结果映射：实体类属性与数据库字段对应 -->
    <resultMap id="Base_Team_List" type="com.abnormality.abnormalityaccept.entity.Team">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="status" column="status"/>
        <result property="resolvingQuestId" column="resolving_quest_id"/>
        <result property="resolvingQuestCode" column="resolving_quest_code"/>
        <result property="level" column="level"/>
        <result property="description" column="description"/>
        <result property="leaderId" column="leader_id"/>
        <result property="isActive" column="is_active"/>
    </resultMap>

    <!-- 基础字段SQL片段（复用查询字段） -->
    <sql id="Base_Team">
        id, name, status, resolving_quest_id, resolving_quest_code, level, description, leader_id, is_active
    </sql>

    <!-- 1. 查询所有团队 -->
    <select id="findAllTeam" resultMap="Base_Team_List">
        SELECT
        <include refid="Base_Team"/>
        FROM team
        where is_active = 1
    </select>

    <!-- 2. 根据ID查询团队 -->
    <select id="findTeamById" resultMap="Base_Team_List">
        SELECT
        <include refid="Base_Team"/>
        FROM team
        WHERE id = #{id} and is_active = 1
    </select>

    <!-- 3. 根据名称查询团队 -->
    <select id="findTeamByName" resultMap="Base_Team_List">
        SELECT
        <include refid="Base_Team"/>
        FROM team
        WHERE name = #{name} and is_active = 1
    </select>

    <select id="findTeamByResolvingQuestId" resultMap="Base_Team_List">
        SELECT
        <include refid="Base_Team"/>
        FROM team
        WHERE resolving_quest_id = #{resolvingQuestId} and is_active = 1
    </select>

    <!-- 3. 添加团队 -->
    <insert id="addTeam">
        INSERT INTO team(name, status, resolving_quest_id, resolving_quest_code, level, description, leader_id,is_active)
        VALUES(#{name}, #{status}, #{resolvingQuestId}, #{resolvingQuestCode}, #{level}, #{description}, #{leaderId},1)
    </insert>

    <!-- 4. 更新团队 -->
    <update id="updateTeam">
        UPDATE team
        SET name = #{name},
            status = #{status},
            resolving_quest_id = #{resolvingQuestId},
            resolving_quest_code = #{resolvingQuestCode},
            level = #{level},
            description = #{description},
            leader_id = #{leaderId}
        WHERE id = #{id}
    </update>

    <!-- 5. 根据ID删除团队,逻辑删除 -->
    <update id="deleteTeamById">
        UPDATE team
        SET is_active = 0
        WHERE id = #{id}
    </update>

    <!-- ============== 拓展方法实现 ============== -->
    <!-- 更新团队任务ID -->
    <update id="updateQuestId">
        UPDATE team SET resolving_quest_id = #{questId} WHERE id = #{teamId}
    </update>

    <!-- 更新团队状态 -->
    <update id="updateStatus">
        UPDATE team SET status = #{status} WHERE id = #{teamId}
    </update>

    <select id="findTeamByConditions" resultMap="Base_Team_List">
        SELECT
        <include refid="Base_Team"/>
        FROM team
        <where>
            <if test="id!=null and id !=''">
                AND id LIKE CONCAT('%',#{id},'%')
            </if>
            <if test="name != null and name != ''">
                AND name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="level != null">
                AND level = #{level}
            </if>
            <if test="resolvingQuestId != null">
                AND resolving_quest_id LIKE CONCAT('%', #{resolvingQuestId}, '%')
            </if>
            <if test="resolvingQuestCode != null and resolvingQuestCode !=''">
                AND resolving_quest_code LIKE CONCAT('%', #{resolvingQuestCode}, '%')
            </if>
            <if test="leaderId != null">
                AND leader_id = #{leaderId}
            </if>
            <if test="description != null">
                AND description LIKE CONCAT('%', #{description}, '%')
            </if>

            <!-- 多值查询 -->
            <if test="stateList != null">
                AND state IN
                <foreach item="state" collection="stateList" separator="," open="(" close=")" index="">
                    #{state}
                </foreach>
            </if>

            <!-- 范围查询 -->
            <if test="minLevel != null">
                AND level >= #{minLevel}
            </if>
            <if test="maxLevel != null">
                AND level &lt;= #{maxLevel}
            </if>

            <if test="isActive != null">
                AND is_active = #{isActive}
            </if>
        </where>
    </select>

    <select id="findTeamLeisure" resultMap="Base_Team_List">
        SELECT
        <include refid="Base_Team"/>
        FROM team
        WHERE status = 0 and resolving_quest_id IS NULL and is_active = 1
    </select>







</mapper>