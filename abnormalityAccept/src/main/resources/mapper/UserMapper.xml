<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.abnormality.abnormalityaccept.mapper.UserMapper">
    <resultMap id="Base_User_List" type="com.abnormality.abnormalityaccept.entity.User">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="level" column="level"/>
        <result property="password" column="password"/>
        <result property="email" column="email"/>
        <result property="inviterId" column="inviter_id"/>
        <result property="leaderId" column="leader_id"/>
        <result property="facilityId" column="facility_id"/>
        <result property="introduction" column="introduction"/>

    </resultMap>

    <sql id="Base_User">
        id,username,level,password,email,inviter_id,leader_id,facility_id,introduction
    </sql>

    <select id="findAllUser" resultMap="Base_User_List">
        select
        <include refid="Base_User"/>
        from user
    </select>

    <select id="findUserById" resultMap="Base_User_List">
        select
        <include refid="Base_User"/>
        from user
        where id=#{id}
    </select>

    <insert id="adduser">
        insert into user(username,level,password,email,inviter_id,leader_id,facility_id,introduction)
        values(#{username},#{level},#{password},#{email},#{inviterId},#{leaderId},#{facilityId},#{introduction})
    </insert>

    <delete id="deleteUserById" parameterType="int">
        delete  from user where id = #{id}
    </delete>

    <update id="updateUser">
        update user
        <set>
            <if test="username != null">
                username = #{username},
            </if>
            <if test="level != null">
                level = #{level},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="inviterId != null">
                inviter_id = #{inviterId},
            </if>
        </set>
    </update>

    <select id="findUserByConditions" resultType="com.abnormality.abnormalityaccept.entity.User">
        SELECT * FROM user
        <where>
            <if test="id != null">AND id = #{id}</if>
            <if test="username != null and username != ''">AND username LIKE CONCAT('%', #{username}, '%')</if>
            <if test="email != null and email != ''">AND email = #{email}</if>
            <if test="level != null">AND level = #{level}</if>
            <if test="facilityId != null">AND facility_id = #{facilityId}</if>
        </where>
    </select>

</mapper>